import 'package:flutter/material.dart';
import 'dart:convert';
import 'package:flutter_swiper/flutter_swiper.dart';
import 'package:flutter_taozugong_app/common/config.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:flutter_taozugong_app/pages/goods/goodsAbout/index.dart';
import 'package:flutter_taozugong_app/pages/goods/goodsInfoTab/index.dart';
import 'package:flutter_taozugong_app/pages/goods/specFloatLayout/free_bottom_sheet.widget.dart';
import 'package:flutter_taozugong_app/pages/goods/specFloatLayout/index.dart';

import 'package:flutter_taozugong_app/routers/application.dart';
import 'package:fluro/fluro.dart';

import 'package:scoped_model/scoped_model.dart';
import 'package:flutter_taozugong_app/model/global.dart';

import 'package:flutter_taozugong_app/service/goods/index.dart';
import 'package:flutter_taozugong_app/model/goods/entity.auto.dart';

class GoodsDetailPage extends StatelessWidget {
  final String goodsNo;
  GoodsDetailPage(this.goodsNo);
  // const GoodsDetailPage({Key key,this.goodsNo}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return ScopedModelDescendant<GlobalModel>(builder: (context, child, model) {
      return Container(
        child: Scaffold(
          backgroundColor: Colors.white,
          appBar: AppBar(
            leading: IconButton(
              icon: Icon(Icons.arrow_back),
              onPressed: () {
                print('返回上一页');
                Navigator.pop(context);
              },
            ),
            title: Text('商品详情页'),
          ),
          body: FutureBuilder(
            future: _getBackInfo(context),
            builder: (context, snapshot) {
              print('snapshot  ${snapshot}');
              if (snapshot.hasData) {
                return Stack(children: <Widget>[
                  ListView(
                    children: <Widget>[
                      headBanner(context, snapshot),
                      new Container(
                        child: detail(context, snapshot),
                        padding: EdgeInsets.only(left: 16.0, right: 16.0),
                      ),
                      Text(model.detailPage),
                      Container(
                        height: 7.0,
                        color: GlobalColor.backPageColor,
                      ),
                      ListItemPage(),
                      Container(
                        height: 7.0,
                        color: GlobalColor.backPageColor,
                      ),
                      new Container(
                          // margin:EdgeInsets.only(bottom: 0.0, left: 16, right: 16),
                          //padding: EdgeInsets.only(left: 16.0, right: 16.0),
                          height: MediaQuery.of(context).size.height - 120.0,
                          child: ProductParam(snapshot: snapshot.data))
                    ],
                  )
                ]);
              } else {
                return Center(child: Text('加载中······'));
              }
            },
          ),
          bottomSheet: footer(context),
        ),
      );
    });
  }

  Future _getBackInfo(BuildContext context) async {
    print('啦啦啦啦我打印啦 ${goodsNo}');
    var goodsDetailRes = await GoodsApiInterface.getGoodsDetail(goodsNo);
    print('啦啦啦啦我打印啦111 ${goodsDetailRes.data}');

    var goodsDetailMap = json.decode(goodsDetailRes.toString());
    print('啦啦啦啦我打印啦222 ${goodsDetailMap.toString()}');
    var goodsDetailEntity = new Autogenerated.fromJson(goodsDetailRes.data);
    // print('啦啦啦啦我打印啦333 ${goodsDetailEntity.data.toJson()}');
    print('啦啦啦啦我打印啦333 ${goodsDetailEntity.toJson()}');

    return goodsDetailEntity.data;
  }

  Widget detail(context, snapshot) {
    return new Column(
      children: <Widget>[
        new Container(
          alignment: Alignment.centerLeft,
          margin: EdgeInsets.only(top: 25, bottom: 5),
          child: new Text(
            '${snapshot.data.name}',
            style: TextStyle(color: Color(0XFF333333), fontSize: 18.0),
          ),
        ),
        new Container(
          alignment: Alignment.centerLeft,
          child: new Text(
            '${snapshot.data.brief}',
            maxLines: 2,
            style: TextStyle(color: Color(0xFF666666), fontSize: 12.0),
          ),
        ),
        SizedBox(height: 5.0),
        new Container(
            margin: EdgeInsets.only(top: 10, bottom: 16),
            child: Column(children: <Widget>[
              new Row(
                children: <Widget>[
                  new Container(
                    margin: EdgeInsets.only(top: 8.0, right: 2.0),
                    child: new Text(
                      '￥',
                      style:
                          TextStyle(color: Color(0xFFFF1E32), fontSize: 12.0),
                    ),
                  ),
                  new Text(
                    '${snapshot.data.minPrice}',
                    style: TextStyle(color: Color(0xFFFF1E32), fontSize: 24.0),
                  ),
                  SizedBox(width: 8.0),
                  new Container(
                      margin: EdgeInsets.only(top: 8.0, right: 2.0),
                      child: Text(
                        '起',
                        style:
                            TextStyle(color: Color(0xFFFF1E32), fontSize: 14.0),
                      )),
                  SizedBox(width: 8.0),
                  new Container(
                      color: Color(0xFFEEEEEE),
                      padding: EdgeInsets.only(
                          left: 4.0, right: 4.0, top: 2.0, bottom: 2.0),
                      // margin: EdgeInsets.only(top: 8.0, right: 2.0),
                      child: Text(
                        '官网售价 ￥${snapshot.data.officialPrice}',
                        style:
                            TextStyle(color: Color(0xFF999999), fontSize: 14.0),
                      )),
                ],
              ),
              SizedBox(height: 5.0),
              snapshot.data.goodsLabelList.length > 0
                  ? buildLabel(context, snapshot.data.goodsLabelList)
                  : Text(''),
            ]))
      ],
    );
  }

  Widget buildLabel(context, goodsLabels) {
    List<Widget> labels = []; //先建一个数组用于存放循环生成的widget
    Widget labelContent; //单独一个widget组件，用于返回需要生成的内容widget
    for (var item in goodsLabels) {
      labels.add(new Container(
        margin: EdgeInsets.only(left: 5.0),
        padding: EdgeInsets.only(top: 4, bottom: 4, left: 5, right: 5),
        child: new Text(
          '$item',
          style: TextStyle(fontSize: 10.0, color: Colors.white),
        ),
        decoration: new BoxDecoration(color: Color(0xFF00A4FF)),
      ));
    }

    labelContent = new Row(children: labels);

    return labelContent;
  }

  Widget headBanner(context, snapshot) {
    return new Row(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: <Widget>[
        Expanded(
          child: Container(
            margin: EdgeInsets.all(0.0),
            child: initBanner(750.0, snapshot),
          ),
          flex: 12,
        )
      ],
    );
  }

  Widget initBanner(height, snapshot) {
    List bannerList = snapshot.data.pictureList;
    return Container(
        color: Colors.black,
        width: ScreenUtil().setWidth(750.0),
        height: ScreenUtil().setWidth(height),
        // padding: EdgeInsets.only(left: 16.0, right: 16.0),
        child: new Swiper(
          itemBuilder: (BuildContext context, int index) {
            return new Image.network(
              bannerList[index],
              fit: BoxFit.cover,
            );
          },
          itemCount: bannerList.length,
          itemWidth: ScreenUtil().setWidth(750.0),
          pagination: new SwiperPagination(
              margin: const EdgeInsets.all(5.0),
              builder: DotSwiperPaginationBuilder(
                color: Colors.white,
                size: 7.0,
                activeSize: 7.0,
                activeColor: Color(0xff00a4ff),
              )),
          scrollDirection: Axis.horizontal,
          autoplay: true,
        ));
  }

  showSpecificationsBottom(context) {
    showFreeModalBottomSheet<Null>(
        context: context,
        builder: (BuildContext context) {
          return new Container(height: 570, child: SpecificationsPage());
        });
  }

  Widget footer(context) {
    return new Container(
      height: 56.0,
      child: new Row(
        children: <Widget>[
          new Expanded(
              flex: 3,
              child: InkWell(
                  onTap: () {
                    Application.router.navigateTo(context, "/home",
                        transition: TransitionType.inFromLeft);
                  },
                  child: new Column(
                    children: <Widget>[
                      new Container(
                        height: 5.0,
                      ),
                      new Image(
                          width: 28,
                          height: 28,
                          image: AssetImage('assets/images/home.png')),
                      new Text(
                        '主页',
                        style: TextStyle(
                            color: GlobalColor.color999,
                            fontSize: GlobalFont.fontSize12),
                      )
                    ],
                  ))),
          new Expanded(
              flex: 2,
              child: new Column(
                children: <Widget>[
                  new Container(
                    height: 5.0,
                  ),
                  new Image(
                      width: 28,
                      height: 28,
                      image: AssetImage('assets/images/customerService.png')),
                  new Text(
                    '客服',
                    style: TextStyle(
                        color: GlobalColor.color999,
                        fontSize: GlobalFont.fontSize12),
                  )
                ],
              )),
          new Expanded(
            flex: 1,
            child: new Container(),
          ),
          new Expanded(
              flex: 6,
              child: new GestureDetector(
                  onTap: () {
                    showSpecificationsBottom(context);
                    // Application.router.navigateTo(context, "/orderConfirm",
                    //     transition: TransitionType.inFromRight);
                  },
                  child: Container(
                      height: 56,
                      alignment: Alignment.center,
                      color: GlobalColor.baseColor,
                      child: new Text(
                        '立即租赁',
                        style: TextStyle(
                            color: GlobalColor.whiteWordColor, fontSize: 18.0),
                      )))),
        ],
      ),
    );
  }
}
